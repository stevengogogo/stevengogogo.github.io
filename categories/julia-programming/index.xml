<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Julia-Programming on Shao-Ting Steven Chiu</title><link>https://stevengogogo.github.io/categories/julia-programming/</link><description>Recent content in Julia-Programming on Shao-Ting Steven Chiu</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 13 Nov 2020 16:09:14 +0800</lastBuildDate><atom:link href="https://stevengogogo.github.io/categories/julia-programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Publish a package with Julia</title><link>https://stevengogogo.github.io/post/julia/how-to-create-and-publish-a-package-with-julia/</link><pubDate>Fri, 13 Nov 2020 16:09:14 +0800</pubDate><guid>https://stevengogogo.github.io/post/julia/how-to-create-and-publish-a-package-with-julia/</guid><description>
&lt;blockquote>
&lt;p>DevOp is a process to organize and publish a workflow. This article summarize the way to publish a Julia package with &lt;a href="https://github.com/invenia/PkgTemplates.jl">PkgTemplates.jl&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="packages-you-need-to-publish-a-package">Packages you need to publish a package&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Packages&lt;/th>
&lt;th style="text-align:center">Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://github.com/invenia/PkgTemplates.jl">PkgTemplate.jl&lt;/a>&lt;/td>
&lt;td style="text-align:center">Generate a skeleton package with CI/CD&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://github.com/JuliaDocs/DocumenterTools.jl">DocumenterTools.jl&lt;/a>&lt;/td>
&lt;td style="text-align:center">Generate RSA key to provide documentation deployment with &lt;a href="https://github.com/features/actions">Github action&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="procedure">Procedure&lt;/h1>
&lt;h2 id="deploy-a-null-repository-at-github">Deploy a null repository at github&lt;/h2>
&lt;ul>
&lt;li>The repo name should be in the form of &lt;code>ProjectName.jl&lt;/code>&lt;/li>
&lt;li>Set &lt;code>public&lt;/code> for publication.&lt;/li>
&lt;/ul>
&lt;h1 id="use-pkgtemplatesjl-to-create-pkg-folder">Use PkgTemplates.jl to create Pkg Folder&lt;/h1>
&lt;ul>
&lt;li>The following command can intall &lt;a href="https://github.com/invenia/PkgTemplates.jl">PkgTemplates.jl&lt;/a> via &lt;a href="https://docs.julialang.org/en/v1/stdlib/REPL/">Julia-REPL&lt;/a>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-julia" data-lang="julia">&lt;span class="ln">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="n">PkgTemplates&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>To compile the package. Simply type&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-julia" data-lang="julia">&lt;span class="ln">1&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="n">PkgTemplates&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Later on, use &lt;a href="https://invenia.github.io/PkgTemplates.jl/stable/user/#Template-1">&lt;code>Template&lt;/code>&lt;/a> to sequenctially manual setting.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-julia" data-lang="julia">&lt;span class="ln">1&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Template&lt;/span>&lt;span class="p">(;&lt;/span>&lt;span class="n">interactive&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In following pattern,&lt;/p>
&lt;ol>
&lt;li>Set &lt;code>github user name&lt;/code>&lt;/li>
&lt;li>Set &lt;code>local directory&lt;/code>&lt;/li>
&lt;li>Set &lt;a href="https://about.codecov.io/">&lt;code>codecov&lt;/code>&lt;/a>&lt;/li>
&lt;li>Set &lt;code>github action (ci.yml)&lt;/code>&lt;/li>
&lt;li>docs&lt;/li>
&lt;li>Julia version&lt;/li>
&lt;li>Test environment: &lt;code>MacOS, Windows, Linux&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>Finally, deploy the package with your &lt;code>PackageName&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-julia" data-lang="julia">&lt;span class="ln">1&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;PackageName&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This command can generate the following stucture:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln"> 1&lt;/span>- PackageName/
&lt;span class="ln"> 2&lt;/span> - src/
&lt;span class="ln"> 3&lt;/span> - PackageName.jl
&lt;span class="ln"> 4&lt;/span> - test/
&lt;span class="ln"> 5&lt;/span> - runtests.jl
&lt;span class="ln"> 6&lt;/span> - .github/
&lt;span class="ln"> 7&lt;/span> - ci.yml
&lt;span class="ln"> 8&lt;/span> - doc/
&lt;span class="ln"> 9&lt;/span> - src/
&lt;span class="ln">10&lt;/span> - index.md
&lt;span class="ln">11&lt;/span> - make.jl
&lt;span class="ln">12&lt;/span> - Package.toml
&lt;span class="ln">13&lt;/span> - Manifest.toml
&lt;span class="ln">14&lt;/span> - Package.toml
&lt;span class="ln">15&lt;/span> - Manifest.toml
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="git-push-to-upload-the-package-skeleton">Git Push to upload the package skeleton&lt;/h2>
&lt;p>Upload the remote server by&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>git add.
&lt;span class="ln">2&lt;/span>git commit -a -m &amp;#34;Create Pkg&amp;#34;
&lt;span class="ln">3&lt;/span>git push
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="continuous-deployment-with-documentertoolsjl">Continuous Deployment with DocumenterTools.jl&lt;/h1>
&lt;p>The documentation can be auto generated from the docstring and the markdown tutorials. To deploy a documentation with github action, &lt;a href="https://juliadocs.github.io/Documenter.jl/stable/lib/public/#DocumenterTools.genkeys">DocumenterTools.jl&lt;/a> is a useful toolkit.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-julia" data-lang="julia">&lt;span class="ln">1&lt;/span>&lt;span class="n">add&lt;/span> &lt;span class="n">DocumenterTools&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="n">DocumenterTools&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Generate RSA key for Github Action:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>DocumenterTools.genkeys()
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The output will looks like&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="ln"> 1&lt;/span>julia&amp;gt; DocumenterTools.genkeys&lt;span class="o">()&lt;/span>
&lt;span class="ln"> 2&lt;/span>&lt;span class="o">[&lt;/span> Info: add the public key below to https://github.com/&lt;span class="nv">$USER&lt;/span>/&lt;span class="nv">$REPO&lt;/span>/settings/keys with read/write access:
&lt;span class="ln"> 3&lt;/span>
&lt;span class="ln"> 4&lt;/span>ssh-rsa AAAAB3NzaC2yc2EAAAaDAQABAAABAQDrNsUZYBWJtXYUk21wxZbX3KxcH8EqzR3ZdTna0Wgk...jNmUiGEMKrr0aqQMZEL2BG7 username@hostname
&lt;span class="ln"> 5&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="o">[&lt;/span> Info: add a secure environment variable named &lt;span class="s1">&amp;#39;DOCUMENTER_KEY&amp;#39;&lt;/span> to https://travis-ci.com/&lt;span class="nv">$USER&lt;/span>/&lt;span class="nv">$REPO&lt;/span>/settings &lt;span class="o">(&lt;/span>&lt;span class="k">if&lt;/span> you deploy using Travis CI&lt;span class="o">)&lt;/span> or https://github.com/&lt;span class="nv">$USER&lt;/span>/&lt;span class="nv">$REPO&lt;/span>/settings/secrets &lt;span class="o">(&lt;/span>&lt;span class="k">if&lt;/span> you deploy using GitHub Actions&lt;span class="o">)&lt;/span> with value:
&lt;span class="ln"> 7&lt;/span>
&lt;span class="ln"> 8&lt;/span>LS0tLS1CJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNnpiRkdXQVZpYlIy...QkVBRWFjY3W9uNjFLaVdOcDU5T2YrUkdmCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg&lt;span class="o">==&lt;/span>
&lt;span class="ln"> 9&lt;/span>
&lt;span class="ln">10&lt;/span>
&lt;span class="ln">11&lt;/span>julia&amp;gt; DocumenterTools.genkeys&lt;span class="o">(&lt;/span>&lt;span class="nv">user&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;JuliaDocs&amp;#34;&lt;/span>, &lt;span class="nv">repo&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;DocumenterTools.jl&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="o">[&lt;/span>Info: add the public key below to https://github.com/JuliaDocs/DocumenterTools.jl/settings/keys with read/write access:
&lt;span class="ln">13&lt;/span>
&lt;span class="ln">14&lt;/span>ssh-rsa AAAAB3Nza2rNsUZYBWJtX3KxcH8EqzR3ZdTna0Wgk...jNmUiGEMKrr0aMZEL2BG7 username@hostname
&lt;span class="ln">15&lt;/span>
&lt;span class="ln">16&lt;/span>&lt;span class="o">[&lt;/span> Info: add a secure environment variable named &lt;span class="s1">&amp;#39;DOCUMENTER_KEY&amp;#39;&lt;/span> to https://travis-ci.com/JuliaDocs/DocumenterTools.jl/settings &lt;span class="o">(&lt;/span>&lt;span class="k">if&lt;/span> you deploy using Travis CI&lt;span class="o">)&lt;/span> or https://github.com/JuliaDocs/DocumenterTools.jl/settings/secrets &lt;span class="o">(&lt;/span>&lt;span class="k">if&lt;/span> you deploy using GitHub Actions&lt;span class="o">)&lt;/span> with value:
&lt;span class="ln">17&lt;/span>
&lt;span class="ln">18&lt;/span>LSdJTiBSU0FtLS0tLQpNSUlFb3dJQkFBS0NBUUVBNnpiRkdXQVZpYlIy...QkVBRWFBxaW9uNaVdOcDU5T2YrUkdmCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg&lt;span class="o">==&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Github Reposritory Setting&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://user-images.githubusercontent.com/29009898/99076987-01116880-25f7-11eb-8d03-f8273cc7068b.png" alt="Github Reposritory Setting">&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;ul>
&lt;li>&lt;code>SSA&lt;/code> should be put at &lt;code>Deploy keys&lt;/code>
&lt;ul>
&lt;li>Select &lt;code>write/read&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>DOCUMENTER_KEY&lt;/code> should be put at &lt;code>Secrets&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="github-action-unit-testing-and-deploy-documentation">Github action: Unit-testing and deploy documentation&lt;/h2>
&lt;p>The file &lt;code>.github/workflow/ci.yml&lt;/code> generated by &lt;code>PkgTemplate.jl&lt;/code> can work on Github server&lt;/p>
&lt;p>I recomment to generate the documentation at the branch of &lt;code>gh-pages&lt;/code>. This feature can be modified with &lt;code>docs/make.jl&lt;/code>.&lt;/p>
&lt;h2 id="results">Results&lt;/h2>
&lt;p>You'll see your website at&lt;/p>
&lt;p>&lt;code>username.github.io/PackageName/dev&lt;/code>&lt;/p>
&lt;p>You'll see Docuementation 🎉. Congrats!&lt;/p></description></item></channel></rss>